id: SWC-128
info:
  name: DoS With Block Gas Limit
  author: N3
  severity: critical
  description:
	When smart contracts are deployed or functions inside them are called, the 	execution of these actions always requires a certain amount of gas, based of how	 much computation is needed to complete them. The Ethereum network specifies a 	block gas limit and the sum of all transactions included in a block can not 	exceed the threshold.
Programming patterns that are harmless in centralized 	applications can lead to Denial of Service conditions in smart contracts when 	the cost of executing a function exceeds the block gas limit. Modifying an array	 of unknown size, that increases in size over time, can lead to such a Denial of	 Service condition.
  references:
	-Ethereum Design Rationale: https://github.com/ethereum/wiki/wiki/Design-Rationale#gas-and-fees
	-Ethereum Yellow Paper: https://ethereum.github.io/yellowpaper/paper.pdf
	-Clear Large Array Without Blowing Gas Limit: https://ethereum.stackexchange.com/questions/3373/how-to-clear-large-arrays-without-blowing-the-gas-limit
	-GovernMental jackpot payout DoS Gas: https://www.reddit.com/r/ethereum/comments/4ghzhv/governmentals_1100_eth_jackpot_payout_is_stuck