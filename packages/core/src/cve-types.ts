export interface CVETemplate {
  id: string;
  info: {
    name: string;
    author: string;
    severity: 'critical' | 'high' | 'medium' | 'low' | 'info';
    description: string;
    reference: string[];
    tags: string[];
  };
  requests: CVERequest[];
}

export interface CVERequest {
  method: 'GET' | 'POST' | 'PUT' | 'DELETE' | 'PATCH';
  path: string[];
  headers?: Record<string, string>;
  body?: string;
  'matchers-condition'?: 'and' | 'or';
  matchers: CVEMatcher[];
}

export interface CVEMatcher {
  type: 'word' | 'regex' | 'status' | 'dsl';
  part?: 'body' | 'header' | 'all';
  words?: string[];
  regex?: string[];
  status?: number[];
  dsl?: string[];
  condition?: 'and' | 'or';
  negative?: boolean;
}

export interface CVEScanResult {
  template: CVETemplate;
  vulnerable: boolean;
  matchedPath?: string;
  matchedMatcher?: string;
  response?: {
    statusCode: number;
    body: string;
    headers: Record<string, string>;
  };
  error?: string;
}

export interface CVEReport {
  target: string;
  timestamp: number;
  totalChecks: number;
  vulnerabilities: CVEScanResult[];
  summary: {
    critical: number;
    high: number;
    medium: number;
    low: number;
    info: number;
  };
}
